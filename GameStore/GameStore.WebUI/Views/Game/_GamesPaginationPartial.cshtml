@using GameStore.BLL.Enums
@using GameStore.WebUI.Helpers
@model GameStore.WebUI.ViewModels.GamesFilters.PaginationViewModel

<div class="row">
    <div class="col-lg-6 col-centered">
        @if (Model.PagesNumber != 1)
        {
            <ul class="pagination pagination-centered">
                @{
                    string isDisabled = String.Empty;
                    if (Model.IsFirstPage)
                    {
                        isDisabled = "disabled";
                    }
                    <li class="@isDisabled">
                        @if (String.IsNullOrEmpty(isDisabled))
                        {
                            <a href="@PaginationUrlHelper.GetPageUrlForNumber(Request.RawUrl, "Pagination.CurrentPage", 1)">First</a>
                        }
                        else
                        {
                            <a href="javascript:void(0)">First</a>
                        }
                    </li>
                    <li class="@isDisabled">
                        @if (String.IsNullOrEmpty(isDisabled))
                        {
                            <a href="@PaginationUrlHelper.GetPageUrlForNumber(Request.RawUrl, "Pagination.CurrentPage", Model.CurrentPage - 1)">←</a>
                        }
                        else
                        {
                            <a href="javascript:void(0)">←</a>
                        }
                    </li>
                    isDisabled = String.Empty;

                    int firstShowingPage = Model.CurrentPage - 2 > 0 ? Model.CurrentPage - 2 : 1;
                    int lastShowingPage = firstShowingPage + 4 <= Model.PagesNumber ? firstShowingPage + 4 : Model.PagesNumber;

                    string isActive = String.Empty;

                    for (int i = firstShowingPage; i <= lastShowingPage; i++)
                    {
                        if (Model.CurrentPage == i)
                        {
                            isActive = "active";
                        }
                        <li class="@isActive">
                            @if (String.IsNullOrEmpty(isActive))
                            {
                                <a href="@PaginationUrlHelper.GetPageUrlForNumber(Request.RawUrl, "Pagination.CurrentPage", i)">@i</a>
                            }
                            else
                            {
                                <a href="javascript:void(0)">@i</a>
                            }
                        </li>
                        isActive = String.Empty;
                    }

                    if (Model.IsLastPage)
                    {
                        isDisabled = "disabled";
                    }
                    <li class="@isDisabled">
                        @if (String.IsNullOrEmpty(isDisabled))
                        {
                            <a href="@PaginationUrlHelper.GetPageUrlForNumber(Request.RawUrl, "Pagination.CurrentPage", Model.CurrentPage + 1)">→</a>
                        }
                        else
                        {
                            <a href="javascript:void(0)">→</a>
                        }
                    </li>
                    <li class="@isDisabled">
                        @if (String.IsNullOrEmpty(isDisabled))
                        {
                            <a href="@PaginationUrlHelper.GetPageUrlForNumber(Request.RawUrl, "Pagination.CurrentPage", Model.PagesNumber)">Last</a>
                        }
                        else
                        {
                            <a href="javascript:void(0)">Last</a>
                        }
                    </li>
                }
            </ul>
        }
    </div>
    <div class="col-lg-6 col-centered">
        <div>
            @{
                List<SelectListItem> selectList = Enum.GetValues(typeof (PageCapacity)).Cast<PageCapacity>().Select(v => new SelectListItem
                {
                    Text = EnumHelper<PageCapacity>.GetEnumDescription(v.ToString()),
                    Value = v.ToString(),
                    Selected = (v == Model.PageCapacity)
                }).ToList();
            }

            @Html.DisplayNameFor(model => model.PageCapacity):
            @Html.DropDownListFor(model => model.PageCapacity, selectList, new {id = "paging-drop"})
        </div>
    </div>
</div>