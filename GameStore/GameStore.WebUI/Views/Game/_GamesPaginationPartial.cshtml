@using System.Runtime.InteropServices.ComTypes
@using System.Text.RegularExpressions
@using GameStore.BLL.Enums
@using GameStore.WebUI.Helpers
@model GameStore.WebUI.ViewModels.GamesFiltersViewModels.PaginationViewModel

<div class="row">
    <div class="col-lg-6 col-centered">
        <ul class="pagination pagination-lg">
            @{
                string isDisabled = String.Empty;
                if (Model.IsFirstPage)
                {
                    isDisabled = "disabled";
                }
                <li class="@isDisabled">
                    @if (String.IsNullOrEmpty(isDisabled))
                    {
                        <a href="@HtmlPaginationUrl.GetPageUrlForNumber(Request.RawUrl, "Pagination.CurrentPage", Model.CurrentPage - 1)">«</a>
                    }
                    else
                    {

                        <a href="javascript:void(0)">«</a>
                    }
                </li>
                isDisabled = String.Empty;

                var firstShowingPage = Model.CurrentPage - 2 > 0 ? Model.CurrentPage - 2 : 1;
                var lastShowingPage = firstShowingPage + 4 <= Model.PagesNumber ? firstShowingPage + 4 : Model.PagesNumber;

                string isActive = String.Empty;

                for (int i = firstShowingPage; i <= lastShowingPage; i++)
                {
                    if (Model.CurrentPage == i)
                    {
                        isActive = "active";
                    }
                    <li class="@isActive">
                        @if (String.IsNullOrEmpty(isActive))
                        {
                            <a href="@HtmlPaginationUrl.GetPageUrlForNumber(Request.RawUrl, "Pagination.CurrentPage", i)">@i</a>
                        }
                        else
                        {
                            <a href="javascript:void(0)">@i</a>
                        }
                    </li>
                        isActive = String.Empty;
                }

                if (Model.IsLastPage)
                {
                    isDisabled = "disabled";
                }
                <li class="@isDisabled">
                    @if (String.IsNullOrEmpty(isDisabled))
                    {
                        <a href="@HtmlPaginationUrl.GetPageUrlForNumber(Request.RawUrl, "Pagination.CurrentPage", Model.CurrentPage + 1)">»</a>
                    }
                    else
                    {
                        <a href="javascript:void(0)">»</a>
                    }
                </li>
                isDisabled = String.Empty;
            }
        </ul>
    </div>
    <div class="col-lg-6 col-centered">
        <div>
            @Html.LabelFor(m => m.PageCapacity)
            @* @Html.EnumDropDownListFor(m => m.PageCapacity, Model.PageCapacity)*@
            @{ var list = Html.GetSelectedListForEnum(m => m.PageCapacity, Model.PageCapacity);
            }
            
            <select data-val="true" data-val-required="The Games per page field is required." id="PageCapacity" name="PageCapacity">
                @foreach (var item in list)
                {
                    var isSelected = item.Selected ? "selected=\"selected\"" : "";
                    <option @isSelected value="@item.Value">@item.Text</option>
                }
            </select>

            @*@Html.DropDownListFor(m => m.PageCapacity, list, list[1].Text)*@
            @*@Html.DropDownListFor(m => m.PageCapacity, new List<SelectListItem>
            {
                new SelectListItem() {Text = PageCapacity.Five.ToString(), Value = PageCapacity.Five.ToString(), Selected = Model.PageCapacity == PageCapacity.Five},
            new SelectListItem() {Text = PageCapacity.Ten.ToString(), Value = PageCapacity.Ten.ToString(), Selected = Model.PageCapacity == PageCapacity.Ten}
            })*@
        </div>
    </div>
</div>