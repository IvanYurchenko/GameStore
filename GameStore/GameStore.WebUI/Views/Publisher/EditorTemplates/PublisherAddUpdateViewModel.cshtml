@using GameStore.WebUI.ViewModels.Localization
﻿@model ﻿GameStore.WebUI.ViewModels.PublisherAddUpdateViewModel

@Html.HiddenFor(model => model.PublisherId)

<ul class="nav nav-tabs">
    <li class="active"><a href="#editor-tab-en" data-toggle="tab" aria-expanded="true">en</a></li>
    <li class=""><a href="#editor-tab-ru" data-toggle="tab" aria-expanded="false">ru</a></li>
</ul>
<br>
<div id="myTabContent" class="tab-content">
    <div class="tab-pane fade active in" id="editor-tab-en">
        @{
            ViewBag.LocalizationNumber = 0;
            PublisherLocalizationViewModel localization = Model.PublisherLocalizations
                .First(loc => String.Equals(loc.Language.Code, "en", StringComparison.CurrentCultureIgnoreCase));
        }        
        @Html.Partial("_PublisherLocalizationViewModelPartial", localization)
    </div>
    <div class="tab-pane fade" id="editor-tab-ru">
        @{
            ViewBag.LocalizationNumber = 1;
            localization = Model.PublisherLocalizations
                .First(loc => String.Equals(loc.Language.Code, "ru", StringComparison.CurrentCultureIgnoreCase));
        }        
        @Html.Partial("_PublisherLocalizationViewModelPartial", localization)
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.HomePage, new { @class = "col-lg-2 control-label" })
    <div class="col-lg-10">
        @Html.TextBoxFor(model => model.HomePage, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.HomePage)
    </div>
</div>